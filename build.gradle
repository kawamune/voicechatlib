/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven { url "https://jitpack.io" }
}

apply plugin: 'eclipse'

eclipse.classpath.file {
    whenMerged {
        entries.findAll { isModule(it) }.each { it.entryAttributes['module'] = 'true' }
    }
}

boolean isModule(entry) {
    // filter java 9 modules
    entry.kind == 'lib'  // Only libraries can be modules
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'

	// log4j    
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
//	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'

	// libjitsi	
//	implementation 'com.github.jitsi:libjitsi:v1.0'
	implementation group: 'org.jitsi', name: 'jitsi-utils', version: '1.0-89-g938d2dc'
	implementation group: 'org.jitsi', name: 'fmj', version: '1.0.1-jitsi'
	implementation group: 'org.jitsi', name: 'zrtp4j-light', version: '4.1.2'
	implementation group: 'org.jitsi', name: 'jitsi-lgpl-dependencies', version: '1.2-13-gf6771c4'

}
/*

compileJava {
	doFirst {
		options.compilerArgs = [
			"--module-path", classpath.asPath
		]
		classpath = files()
	}
}
*/

task runCaller (type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	args 'caller'
	main = 'jp.kawamune.minecraft.mod.voicechatlib.test.TestMain'
}

task runReceiver (type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	args 'receiver'
	main = 'jp.kawamune.minecraft.mod.voicechatlib.test.TestMain'
}

